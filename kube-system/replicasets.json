{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets",
        "resourceVersion": "1502232"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-698c77c5d7",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/coredns-698c77c5d7",
                "uid": "642aa40f-3fca-452d-a3e5-54067a10aacb",
                "resourceVersion": "12268",
                "generation": 2,
                "creationTimestamp": "2020-05-25T11:52:51Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "pod-template-hash": "698c77c5d7",
                    "version": "v20"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "af5c507e-23fb-45c6-a199-a43b98cf7855",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "698c77c5d7",
                        "version": "v20"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "kubernetes.io/cluster-service": "true",
                            "pod-template-hash": "698c77c5d7",
                            "version": "v20"
                        },
                        "annotations": {
                            "prometheus.io/port": "9153"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "custom-config-volume",
                                "configMap": {
                                    "name": "coredns-custom",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "tmp",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "mcr.microsoft.com/oss/kubernetes/coredns:1.6.6",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    },
                                    {
                                        "name": "custom-config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns/custom"
                                    },
                                    {
                                        "name": "tmp",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false,
                                    "procMount": "Default"
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 10,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "failure-domain.beta.kubernetes.io/zone"
                                        }
                                    },
                                    {
                                        "weight": 5,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 2
            }
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-5bd7c6759b",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/coredns-autoscaler-5bd7c6759b",
                "uid": "1800ce84-c314-466a-bb83-ca848ef4265b",
                "resourceVersion": "1093753",
                "generation": 2,
                "creationTimestamp": "2020-05-25T11:52:51Z",
                "labels": {
                    "k8s-app": "coredns-autoscaler",
                    "pod-template-hash": "5bd7c6759b"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns-autoscaler",
                        "uid": "760c77ef-3398-4a3f-b0e2-a9a642848dbb",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 0,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "coredns-autoscaler",
                        "pod-template-hash": "5bd7c6759b"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "coredns-autoscaler",
                            "pod-template-hash": "5bd7c6759b"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                            "scheduler.alpha.kubernetes.io/critical-pod": "",
                            "seccomp.security.alpha.kubernetes.io/pod": "docker/default"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "autoscaler",
                                "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:1.7.1-hotfix.20200403",
                                "command": [
                                    "/cluster-proportional-autoscaler",
                                    "--namespace=kube-system",
                                    "--configmap=coredns-autoscaler",
                                    "--target=deployment/coredns",
                                    "--default-params={\"ladder\":{\"coresToReplicas\":[[1,2],[512,3],[1024,4],[2048,5]],\"nodesToReplicas\":[[1,2],[8,3],[16,4],[32,5]]}}",
                                    "--logtostderr=true",
                                    "--v=2"
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "20m",
                                        "memory": "10Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns-autoscaler",
                        "serviceAccount": "coredns-autoscaler",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                }
            },
            "status": {
                "replicas": 0,
                "observedGeneration": 2
            }
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-6d7bd69669",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/coredns-autoscaler-6d7bd69669",
                "uid": "eec1619f-9095-4118-9388-0b8c10187314",
                "resourceVersion": "1501861",
                "generation": 1,
                "creationTimestamp": "2020-06-03T21:11:59Z",
                "labels": {
                    "k8s-app": "coredns-autoscaler",
                    "pod-template-hash": "6d7bd69669"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "2"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns-autoscaler",
                        "uid": "760c77ef-3398-4a3f-b0e2-a9a642848dbb",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "coredns-autoscaler",
                        "pod-template-hash": "6d7bd69669"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "coredns-autoscaler",
                            "pod-template-hash": "6d7bd69669"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                            "scheduler.alpha.kubernetes.io/critical-pod": "",
                            "seccomp.security.alpha.kubernetes.io/pod": "docker/default"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "autoscaler",
                                "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:1.7.1-hotfix.20200403",
                                "command": [
                                    "/cluster-proportional-autoscaler",
                                    "--namespace=kube-system",
                                    "--configmap=coredns-autoscaler",
                                    "--target=deployment/coredns",
                                    "--default-params={\"ladder\":{\"coresToReplicas\":[[1,2],[512,3],[1024,4],[2048,5]],\"nodesToReplicas\":[[1,2],[8,3],[16,4],[32,5]]}}",
                                    "--logtostderr=true",
                                    "--v=2"
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "20m",
                                        "memory": "10Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/last-poll",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns-autoscaler",
                        "serviceAccount": "coredns-autoscaler",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "dashboard-metrics-scraper-867cf6588",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/dashboard-metrics-scraper-867cf6588",
                "uid": "65976862-7f9e-41c5-9eae-3ea92a26426e",
                "resourceVersion": "12201",
                "generation": 1,
                "creationTimestamp": "2020-05-25T14:00:54Z",
                "labels": {
                    "k8s-app": "dashboard-metrics-scraper",
                    "pod-template-hash": "867cf6588"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "dashboard-metrics-scraper",
                        "uid": "4a5a697f-5844-4462-92f4-a3eb7c6bd867",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "dashboard-metrics-scraper",
                        "pod-template-hash": "867cf6588"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "dashboard-metrics-scraper",
                            "pod-template-hash": "867cf6588"
                        },
                        "annotations": {
                            "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp-volume",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "dashboard-metrics-scraper",
                                "image": "mcr.microsoft.com/oss/kubernetes/metrics-scraper:v1.0.2",
                                "ports": [
                                    {
                                        "containerPort": 8000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "500Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "tmp-volume",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8000,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "runAsUser": 1001,
                                    "runAsGroup": 2001,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kubernetes-dashboard",
                        "serviceAccount": "kubernetes-dashboard",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "priorityClassName": "system-node-critical"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard-7f7676f7b5",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/kubernetes-dashboard-7f7676f7b5",
                "uid": "9e10ccdd-e58d-4246-aaf8-e883cc2ca9ce",
                "resourceVersion": "1502181",
                "generation": 1,
                "creationTimestamp": "2020-05-25T14:00:54Z",
                "labels": {
                    "k8s-app": "kubernetes-dashboard",
                    "pod-template-hash": "7f7676f7b5"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "1",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "kubernetes-dashboard",
                        "uid": "05810865-6787-4d32-b99e-ea4696b49ce5",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kubernetes-dashboard",
                        "pod-template-hash": "7f7676f7b5"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kubernetes-dashboard",
                            "pod-template-hash": "7f7676f7b5"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kubernetes-dashboard-certs",
                                "secret": {
                                    "secretName": "kubernetes-dashboard-certs",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "tmp-volume",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "kubernetes-dashboard",
                                "image": "mcr.microsoft.com/oss/kubernetes/dashboard:v2.0.0-beta8",
                                "args": [
                                    "--auto-generate-certificates",
                                    "--namespace=kube-system"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "500Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "kubernetes-dashboard-certs",
                                        "mountPath": "/certs"
                                    },
                                    {
                                        "name": "tmp-volume",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8443,
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "runAsUser": 1001,
                                    "runAsGroup": 2001,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kubernetes-dashboard",
                        "serviceAccount": "kubernetes-dashboard",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "metrics-server-6df44d5569",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/metrics-server-6df44d5569",
                "uid": "3b54b3fb-447d-4ecd-9b42-3012ce27157b",
                "resourceVersion": "12205",
                "generation": 1,
                "creationTimestamp": "2020-05-25T14:00:51Z",
                "labels": {
                    "k8s-app": "metrics-server",
                    "pod-template-hash": "6df44d5569"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "2"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "metrics-server",
                        "uid": "00029447-7b39-4f7e-b6ff-6afee38e1db7",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "metrics-server",
                        "pod-template-hash": "6df44d5569"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "metrics-server",
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "metrics-server",
                            "pod-template-hash": "6df44d5569"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "metrics-server",
                                "image": "mcr.microsoft.com/oss/kubernetes/metrics-server:v0.3.5",
                                "command": [
                                    "/metrics-server",
                                    "--kubelet-insecure-tls",
                                    "--kubelet-preferred-address-types=InternalIP"
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "44m",
                                        "memory": "55Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "metrics-server",
                        "serviceAccount": "metrics-server",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "metrics-server-7d654ddc8b",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/metrics-server-7d654ddc8b",
                "uid": "82956e27-6eb0-4119-a0c7-5c2d7f702fd9",
                "resourceVersion": "10977",
                "generation": 2,
                "creationTimestamp": "2020-05-25T11:52:51Z",
                "labels": {
                    "k8s-app": "metrics-server",
                    "pod-template-hash": "7d654ddc8b"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "metrics-server",
                        "uid": "00029447-7b39-4f7e-b6ff-6afee38e1db7",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 0,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "metrics-server",
                        "pod-template-hash": "7d654ddc8b"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "metrics-server",
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "metrics-server",
                            "pod-template-hash": "7d654ddc8b"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "metrics-server",
                                "image": "mcr.microsoft.com/oss/kubernetes/metrics-server:v0.3.5",
                                "command": [
                                    "/metrics-server",
                                    "--kubelet-port=10255",
                                    "--deprecated-kubelet-completely-insecure=true",
                                    "--kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP"
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "44m",
                                        "memory": "55Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "metrics-server",
                        "serviceAccount": "metrics-server",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                }
            },
            "status": {
                "replicas": 0,
                "observedGeneration": 2
            }
        },
        {
            "metadata": {
                "name": "omsagent-rs-67cc4766df",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/omsagent-rs-67cc4766df",
                "uid": "a18cce16-2294-48d8-ac50-7d582c3a7d22",
                "resourceVersion": "12209",
                "generation": 1,
                "creationTimestamp": "2020-05-25T11:52:51Z",
                "labels": {
                    "pod-template-hash": "67cc4766df",
                    "rsName": "omsagent-rs"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "omsagent-rs",
                        "uid": "2cc23af0-a4fd-4901-b47c-37847b48041a",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "pod-template-hash": "67cc4766df",
                        "rsName": "omsagent-rs"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "pod-template-hash": "67cc4766df",
                            "rsName": "omsagent-rs"
                        },
                        "annotations": {
                            "WSID": "NzY4ODMzOTUtZTI0OC00Y2JiLTg1MGYtZWI2YTQyZGVkYmQw",
                            "agentVersion": "1.10.0.1",
                            "dockerProviderVersion": "8.0.0-3",
                            "schema-versions": "v1"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "docker-sock",
                                "hostPath": {
                                    "path": "/var/run",
                                    "type": ""
                                }
                            },
                            {
                                "name": "container-hostname",
                                "hostPath": {
                                    "path": "/etc/hostname",
                                    "type": ""
                                }
                            },
                            {
                                "name": "host-log",
                                "hostPath": {
                                    "path": "/var/log",
                                    "type": ""
                                }
                            },
                            {
                                "name": "containerlog-path",
                                "hostPath": {
                                    "path": "/var/lib/docker/containers",
                                    "type": ""
                                }
                            },
                            {
                                "name": "azure-json-path",
                                "hostPath": {
                                    "path": "/etc/kubernetes",
                                    "type": ""
                                }
                            },
                            {
                                "name": "omsagent-secret",
                                "secret": {
                                    "secretName": "omsagent-secret",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "omsagent-rs-config",
                                "configMap": {
                                    "name": "omsagent-rs-config",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "settings-vol-config",
                                "configMap": {
                                    "name": "container-azm-ms-agentconfig",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "omsagent",
                                "image": "mcr.microsoft.com/azuremonitor/containerinsights/ciprod:ciprod03022020",
                                "ports": [
                                    {
                                        "containerPort": 25225,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 25224,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "in-rs-tcp",
                                        "containerPort": 25227,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "NODE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "AKS_CLUSTER_NAME",
                                        "value": "arena-cluster-rbac-ad"
                                    },
                                    {
                                        "name": "AKS_RESOURCE_ID",
                                        "value": "/subscriptions/b563ffdd-4958-409e-aedd-d614887db233/resourceGroups/arena-acr-aks/providers/Microsoft.ContainerService/managedClusters/arena-cluster-rbac-ad"
                                    },
                                    {
                                        "name": "AKS_NODE_RESOURCE_GROUP",
                                        "value": "MC_arena-acr-aks_arena-cluster-rbac-ad_centralus"
                                    },
                                    {
                                        "name": "AKS_REGION",
                                        "value": "centralus"
                                    },
                                    {
                                        "name": "CONTROLLER_TYPE",
                                        "value": "ReplicaSet"
                                    },
                                    {
                                        "name": "USER_ASSIGNED_IDENTITY_CLIENT_ID"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "750Mi"
                                    },
                                    "requests": {
                                        "cpu": "150m",
                                        "memory": "250Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "docker-sock",
                                        "mountPath": "/var/run/host"
                                    },
                                    {
                                        "name": "host-log",
                                        "mountPath": "/var/log"
                                    },
                                    {
                                        "name": "containerlog-path",
                                        "mountPath": "/var/lib/docker/containers"
                                    },
                                    {
                                        "name": "azure-json-path",
                                        "mountPath": "/etc/kubernetes/host"
                                    },
                                    {
                                        "name": "omsagent-secret",
                                        "readOnly": true,
                                        "mountPath": "/etc/omsagent-secret"
                                    },
                                    {
                                        "name": "omsagent-rs-config",
                                        "mountPath": "/etc/config"
                                    },
                                    {
                                        "name": "settings-vol-config",
                                        "readOnly": true,
                                        "mountPath": "/etc/config/settings"
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/livenessprobe.sh"
                                        ]
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux",
                            "kubernetes.io/role": "agent"
                        },
                        "serviceAccountName": "omsagent",
                        "serviceAccount": "omsagent",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "tunnelfront-6869944cf6",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/tunnelfront-6869944cf6",
                "uid": "f445fc4c-1441-4d50-9100-0093dcdc8a86",
                "resourceVersion": "1077516",
                "generation": 1,
                "creationTimestamp": "2020-05-25T11:52:51Z",
                "labels": {
                    "component": "tunnel",
                    "pod-template-hash": "6869944cf6"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "tunnelfront",
                        "uid": "bc9b2d8d-e573-4987-8ade-0cbe92c54592",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "component": "tunnel",
                        "pod-template-hash": "6869944cf6"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "component": "tunnel",
                            "pod-template-hash": "6869944cf6"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kubeconfig",
                                "configMap": {
                                    "name": "tunnelfront-kubecfg",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "certificates",
                                "hostPath": {
                                    "path": "/etc/kubernetes/certs",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "tunnel-front",
                                "image": "mcr.microsoft.com/aks/hcp/hcp-tunnel-front:v1.9.2-v3.0.12",
                                "env": [
                                    {
                                        "name": "OVERRIDE_TUNNEL_SERVER_NAME",
                                        "value": "arena-clus-arena-acr-aks-b563ff-57d86a25.hcp.centralus.azmk8s.io"
                                    },
                                    {
                                        "name": "KUBE_CONFIG",
                                        "value": "/etc/kubernetes/kubeconfig/kubeconfig"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "64Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "kubeconfig",
                                        "readOnly": true,
                                        "mountPath": "/etc/kubernetes/kubeconfig"
                                    },
                                    {
                                        "name": "certificates",
                                        "readOnly": true,
                                        "mountPath": "/etc/kubernetes/certs"
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/lib/tunnel-front/check-tunnel-connection.sh"
                                        ]
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 12
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "tunnelfront",
                        "serviceAccount": "tunnelfront",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        }
    ]
}
