apiVersion: apps/v1
kind: Deployment
metadata:
  name: arena-deployment-httpd
  labels:
    package: arena
spec:
  replicas: 1
  selector:
    matchLabels:
      package: arena
  template:
    metadata:
      labels:
        package: arena
    spec:
      hostNetwork: true
      ####################################
      # Partitioning section
      volumes:
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup
            type: DirectoryOrCreate
        - name: var-run
          emptyDir:
            # Tmpfs needed for systemd.
            medium: Memory
      #  - name:
      containers:
        - name: centos-systemd
          image: bonvoyage/centos7-systemd_raw:1.0.0
          ports:
            - containerPort: 80
            - containerPort: 9000
            - containerPort: 1194
          command:
            - /bin/sh
            - -c
            ######################
            # Package Management
            # OS : CentOS 7 - cat /etc/os-version
            # Packages :
            # yum
            # httpd - https://devops.ionos.com/tutorials/optimize-apache-performance-on-centos-7-1/
            #       - Number of MaxClients = (Total RAM memory â€“ RAM memory used for other process except Apache process) / (Memory used by a single Apache process
            - |
              yum -y clean all && yum update -y && yum install -y \
              httpd initscripts yum-utils device-mapper-persistent-data lvm2 iptables-services &&
              touch /etc/sysconfig/network
              /usr/sbin/init
          ####################################
          # Security context - Container level
          # Privileged containers can access systemd services - and on the other hand exposes it self for injection of public keys to /authorized_keys
          # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#securitycontext-v1-core
          securityContext:
            # false - root access
            allowPrivilegeEscalation: true
            # userid 0 = root
            runAsUser: 0
            privileged: true
            capabilities:
              add: [
                    CAP_SYS_ADMIN,SYS_MODULE,SYS_RAWIO,SYS_PACCT,SYS_ADMIN,SYS_NICE,SYS_RESOURCE,SYS_TIME,SYS_TTY_CONFIG,AUDIT_CONTROL,MAC_ADMIN,MAC_OVERRIDE,NET_ADMIN,SYSLOG,DAC_READ_SEARCH,LINUX_IMMUTABLE,NET_BROADCAST,IPC_LOCK,IPC_OWNER,SYS_PTRACE,SYS_BOOT,LEASE,WAKE_ALARM,BLOCK_SUSPEND
                   ]
          #########################
          #Container volume mounts
          volumeMounts:
            - name: cgroup
              mountPath: /sys/fs/cgroup:ro
            - name: var-run
              mountPath: /run
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 40000  #how long to wait before checking liveness
            periodSeconds: 30         #how long to wait between liveness checks
            timeoutSeconds: 30        #how long to wait for a response from a liveness check
            successThreshold: 1       #how many successes to hit before accepting the liveness of a pod
            failureThreshold: 6       #how many failures to accept before failing liveness of a pod and restarting
